"use strict";var precacheConfig=[["/index.html","e3d14c94b9c66c19e26061e79319131f"],["/static/css/main.88309137.css","686701a86bee0b7d2469a28013255d14"],["/static/js/main.eb109fad.js","3cca6559aa7088de377075ef2b3507cf"],["/static/media/acrobatics-grey.3f164845.svg","3f164845a5b17bb862f85eb9d3fd003d"],["/static/media/acrobatics.aa8de5b1.svg","aa8de5b1015ce1ee045ca1de7bddaad3"],["/static/media/ballet-grey.6c54882c.svg","6c54882c369e17f396153dcefedae170"],["/static/media/ballet3.b5340fc5.svg","b5340fc503511d4376344e42a965ded7"],["/static/media/black.6b10c4d3.jpeg","6b10c4d34985574fcf10afe88511e529"],["/static/media/curtain-grey.67d1cea6.svg","67d1cea6f23f430859f6fdd22df5742e"],["/static/media/ic-vocal-grey.83635aea.svg","83635aea8ad410a7d94052e770af9a82"],["/static/media/ic-vocal.b8eae1f4.svg","b8eae1f4f20afe9942db982aa3207d73"],["/static/media/mask-grey.631d8015.svg","631d801508372baa3dc1a0770be29dd6"],["/static/media/mask.eec73ddc.svg","eec73ddcc0bbe7542ef078b89ad39aaa"],["/static/media/parent-child-grey.7e7b3867.svg","7e7b3867292ef3af3bf83e6ecca8bc00"],["/static/media/parent-child.48ffde30.svg","48ffde30facd21a204eb123ee6af737c"],["/static/media/recharge.b7be61a2.jpg","b7be61a24d91ee63e32d1e1b2f0a2905"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var r="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(r,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});